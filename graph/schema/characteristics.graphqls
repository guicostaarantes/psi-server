enum CharacteristicType @goModel(model: "github.com/guicostaarantes/psi-server/modules/characteristics/models.CharacteristicType") {
    BOOLEAN
    SINGLE
    MULTIPLE
}

input SetMyProfileCharacteristicChoiceInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/characteristics/models.SetCharacteristicChoiceInput") {
    characteristicName: String!
    selectedValues: [String!]!
}

input SetMyProfilePreferenceInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/characteristics/models.SetPreferenceInput") {
    characteristicName: String!
    selectedValue: String!
    weight: Int!
}

input SetProfileCharacteristicInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/characteristics/models.SetCharacteristicInput") {
    name: String!
    type: CharacteristicType!
    possibleValues: [String!]!
}

type Affinity @goModel(model: "github.com/guicostaarantes/psi-server/modules/characteristics/models.Affinity") {
    createdAt: Int!
    psychologist: PsychologistProfile! @goField(forceResolver: true)
}

type Characteristic @goModel(model: "github.com/guicostaarantes/psi-server/modules/characteristics/models.CharacteristicResponse") {
    name: String!
    type: CharacteristicType!
    possibleValues: [String!]!
}

type CharacteristicChoice @goModel(model: "github.com/guicostaarantes/psi-server/modules/characteristics/models.CharacteristicChoiceResponse") {
    name: String!
    type: CharacteristicType!
    selectedValues: [String!]!
    possibleValues: [String!]!
}

type Preference @goModel(model: "github.com/guicostaarantes/psi-server/modules/characteristics/models.PreferenceResponse") {
    characteristicName: String!
    selectedValue: String!
    weight: Int!
}

extend type Query {
    """The patientCharacteristics query allows a user to get all possible patient characteristics."""
    patientCharacteristics: [Characteristic!]! @hasRole(role: [COORDINATOR,PSYCHOLOGIST,PATIENT])

    """The psychologistCharacteristics query allows a user to get all possible psychologist characteristics."""
    psychologistCharacteristics: [Characteristic!]! @hasRole(role: [COORDINATOR,PSYCHOLOGIST,PATIENT])

    """The myPatientTopAffinities query allows a user to get the last calculation of affinities for their patient profile."""
    myPatientTopAffinities: [Affinity!]! @hasRole(role: [COORDINATOR,PSYCHOLOGIST,PATIENT])
}

extend type Mutation {
    """The setPatientCharacteristics mutation allows a user to change the possible characteristics for all patients."""
    setPatientCharacteristics(input: [SetProfileCharacteristicInput!]!): Boolean @hasRole(role: [COORDINATOR])
    
    """The setPsychologistCharacteristics mutation allows a user to change the possible characteristics for all psychologists."""
    setPsychologistCharacteristics(input: [SetProfileCharacteristicInput!]!): Boolean @hasRole(role: [COORDINATOR])
    
    """The setMyPatientTopAffinities mutation allows a user to compare its patient profile against all psychologist profiles that have PENDING treatments."""
    setMyPatientTopAffinities: Boolean @hasRole(role: [COORDINATOR,PSYCHOLOGIST,PATIENT])
}