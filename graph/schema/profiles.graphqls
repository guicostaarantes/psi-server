input CreateOwnPsychologistProfileInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.CreatePsychologistInput") {
    birthDate: Int!
    city: String!
}

input CreatePsychologistInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.CreatePsychologistInput") {
    userId: String!
    birthDate: Int!
    city: String!
}

input SetOwnPsyCharacteristicChoiceInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.SetPsyCharacteristicChoiceInput") {
    characteristicName: String!
    values: [String!]!
}

input UpdateOwnPsychologistProfileInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.UpdatePsychologistInput") {
    birthDate: Int!
    city: String!
}

input CreatePsyCharacteristicInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.CreatePsyCharacteristicInput") {
    name: String!
    many: Boolean!
    possibleValues: [String!]!
}

input UpdatePsyCharacteristicInput @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.UpdatePsyCharacteristicInput") {
    name: String!
    many: Boolean!
    possibleValues: [String!]!
}

type PsychologistProfile @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.Psychologist") {
    id: ID!
    birthDate: Int!
    city: String!
    characteristics: [PsyCharacteristicChoice!]!
}

type PsyCharacteristicChoice @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.PsyCharacteristicChoiceResponse") {
    name: String!
    many: Boolean!
    values: [String!]!
    possibleValues: [String!]!
}

type PsyCharacteristic @goModel(model: "github.com/guicostaarantes/psi-server/modules/profiles/models.PsyCharacteristicResponse") {
    id: ID!
    name: String!
    many: Boolean!
    possibleValues: [String!]!
}

extend type Query {
    GetOwnPsychologistProfile: PsychologistProfile! @hasRole(role: [COORDINATOR,PSYCHOLOGIST])
    GetPsyCharacteristics: [PsyCharacteristic!]! @hasRole(role: [COORDINATOR,PSYCHOLOGIST])
}

extend type Mutation {
    CreateOwnPsychologistProfile(input: CreateOwnPsychologistProfileInput!): Boolean @hasRole(role: [COORDINATOR,PSYCHOLOGIST])
    CreatePsyCharacteristic(input: CreatePsyCharacteristicInput!): Boolean @hasRole(role: [COORDINATOR])
    SetOwnPsyCharacteristicChoice(input: SetOwnPsyCharacteristicChoiceInput!): Boolean @hasRole(role: [COORDINATOR,PSYCHOLOGIST])
    UpdateOwnPsychologistProfile(input: UpdateOwnPsychologistProfileInput!): Boolean @hasRole(role: [COORDINATOR,PSYCHOLOGIST])
    UpdatePsyCharacteristic(id: ID!, input: UpdatePsyCharacteristicInput!): Boolean @hasRole(role: [COORDINATOR])
}